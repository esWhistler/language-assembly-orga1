scopeName: 'source.asm'
name: 'Assembly Orga1'
fileTypes: [ 'asm' ]
limitLineLength: false

patterns: [
    { include: '#comment' }
    {
        comment: 'Etiquetas'
        name: 'keyword.control.asm'
        match: '^[^\ ]*\:'
    }
    {
      comment: 'Funciones con 2 operandos'
      match: '(MOV|ADD|SUB|AND|OR|CMP|ADDC)\ +([0-9A-Za-z\\[\\]]+),\ +([0-9A-Za-z\\[\\]]+)'
      captures:
        1: name: 'support.function.asm'
        2:
          name: 'markup.bold.asm'
          patterns:[
            { include: '#comment' }
            {
              name: 'constant.language.asm'
              match: '0x[0-9A-F]{4}'
            }
            {
              name: 'variable.asm'
              match: '(\\[*)[0-9A-Z]+(\\]*)'
              captures:
                1: name: 'string.regexp.character-class.asm'
                2: name: 'string.regexp.character-class.asm'
            }
          ]
        3:
          name: 'markup.bold.asm'
          patterns:[
            { include: '#comment' }
            {
              name: 'constant.language.asm'
              match: '0x[0-9A-F]{4}'
            }
            {
              name: 'variable.asm'
              match: '(\\[*)[0-9A-Z]+(\\]*)'
              captures:
                1: name: 'string.regexp.character-class.asm'
                2: name: 'string.regexp.character-class.asm'
            }
          ]
    }
    {
      comment: 'Funciones con 1 operando'
      match: '(NEG|NOT|JMP|CALL)\ +([0-9A-Za-z\\[\\]]+)'
      captures:
        1: name: 'support.function.asm'
        2:
          name: 'markup.bold.asm'
          patterns:[
            { include: '#comment' }
            {
              name: 'constant.language.asm'
              match: '0x[0-9A-F]{4}'
            }
            {
              name: 'variable.asm'
              match: '(\\[*)[0-9A-Z]+(\\]*)'
              captures:
                1: name: 'string.regexp.character-class.asm'
                2: name: 'string.regexp.character-class.asm'
            }
          ]
    }
    {
      comment: 'Funcion return'
      match: 'RET'
      name: 'support.function.asm'
    }
    {
      comment: 'Saltos condicionales'
      match: '(JE|JNE|JLE|JG|JL|JGE|JLEU|JGU|JCS|JNEG|JVS)\ +([a-z]+)'
      captures:
        1: name: 'support.function.asm'
        2: name: 'keyword.control.asm'
    }
]

repository:
    comment:{
        comment: 'Comentario del codigo'
        name: 'comment.line.asm'
        match: '\;.*$'
    }
